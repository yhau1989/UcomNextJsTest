{"ast":null,"code":"var _jsxFileName = \"/Users/spm/Desktop/UcomNextJsTest/pages/index.js\";\nvar __jsx = React.createElement;\nimport Container from \"../components/Container\";\nimport React, { useState } from 'react';\nimport { getUrlEstadoCuenta, getUrlPago } from \"../libraries/env\";\nimport Estadocuenta from \"../components/Estadocuenta\";\nimport { LoadingIndigo, LoadingWhite } from \"../components/Loadings\";\n\nconst Index = () => {\n  const {\n    0: inpCed,\n    1: inpCedValue\n  } = useState('');\n  const {\n    0: loadinConsulta,\n    1: setloadinConsulta\n  } = useState('');\n  const {\n    0: loadinPago,\n    1: setloadinPago\n  } = useState('');\n  const {\n    0: inpIdFact,\n    1: setinpIdFact\n  } = useState('');\n  const {\n    0: inpPago,\n    1: setinpPago\n  } = useState('');\n  const {\n    0: estadoCta,\n    1: setEstadoCta\n  } = useState(null);\n\n  async function getEstadoCuenta(e) {\n    e.preventDefault();\n\n    if (inpCed.length > 0) {\n      setEstadoCta(null);\n      let proc = {\n        method: 'POST',\n        body: JSON.stringify({\n          cliente: inpCed\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(getUrlEstadoCuenta(), proc).then(setloadinConsulta(__jsx(LoadingIndigo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }\n      }))).then(result => {\n        return result.json();\n      }).then(data => {\n        setloadinConsulta('');\n        setEstadoCta(data);\n      }).catch(error => {\n        console.log(error);\n        setloadinConsulta('errores...');\n      });\n    }\n  }\n\n  async function PagarFactura(e) {\n    e.preventDefault();\n\n    if (inpPago.length > 0 && inpIdFact.length > 0) {\n      setloadinPago('');\n      let proc = {\n        method: 'POST',\n        body: JSON.stringify({\n          secuencial: inpIdFact,\n          val_pagado: inpPago\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(getUrlPago(), proc).then(setloadinPago(__jsx(LoadingWhite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }))).then(result => {\n        return result.json();\n      }).then(data => {\n        if (data.status == 0) {\n          setloadinPago(__jsx(\"div\", {\n            className: \"text-white\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }\n          }, \"Pago realizado con exito\"), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }\n          }, data.data.idtrx)));\n        } else {\n          setloadinPago(__jsx(\"div\", {\n            className: \"text-white\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }\n          }, \"Error en el proceso de pago\"), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }\n          }, data.msg)));\n        }\n      }).catch(error => {\n        console.log(error);\n        setloadinPago('errores...');\n      });\n    }\n  }\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"flex flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex-1 text-center h-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"pt-10 text-3xl font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Estado de cuenta\"), __jsx(\"div\", {\n    className: \"container flex flex-wrap my-10 px-6 justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full md:w-1/2 mb-6 md:mb-0 text-left pr-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-1 ml-1\",\n    htmlFor: \"imp_ced\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"cedula\"), __jsx(\"input\", {\n    id: \"imp_ced\",\n    className: \"block w-full text-gray-700 border rounded py-3 px-4 leading-tight focus:outline-none\",\n    type: \"text\",\n    placeholder: \"0926327917\",\n    value: inpCed,\n    onChange: e => inpCedValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"flex content-end flex-wrap \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"bg-indigo-600 hover:bg-indigo-700 border-indigo-600 hover:border-indigo-700 text-sm border-4 text-white py-2 px-2 rounded\",\n    type: \"button\",\n    onClick: e => getEstadoCuenta(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Consultar\"))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, loadinConsulta), estadoCta && __jsx(Estadocuenta, {\n    props: estadoCta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 24\n    }\n  })), __jsx(\"div\", {\n    className: \"flex-1 bg-indigo-600 text-center bg-gray-400 h-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"pt-10 text-3xl font-semibold text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Realizar Pagos\"), __jsx(\"div\", {\n    className: \" flex flex-wrap my-10 px-6 justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"flex-1 text-left px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block uppercase tracking-wide text-gray-100 text-xs font-bold mb-1 ml-1\",\n    htmlFor: \"imp_idfact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Id Factura\"), __jsx(\"input\", {\n    id: \"imp_idfact\",\n    className: \"block w-full text-gray-700 border rounded py-3 px-4 leading-tight focus:outline-none\",\n    type: \"number\",\n    value: inpIdFact,\n    onChange: e => setinpIdFact(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"flex-1 text-left px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block uppercase tracking-wide text-gray-100 text-xs font-bold mb-1 ml-1\",\n    htmlFor: \"imp_idfact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"Valor a pagar\"), __jsx(\"input\", {\n    id: \"imp_val\",\n    className: \"block w-full text-gray-700 border rounded py-3 px-4 leading-tight focus:outline-none\",\n    type: \"text\",\n    value: inpPago,\n    onChange: e => setinpPago(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"flex content-end flex-wrap  text-left px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    className: \"bg-indigo-300 hover:bg-indigo-800 border-indigo-300 hover:border-indigo-800 hover:text-white text-sm border-4 text-indigo-900 font-medium  py-2 px-6 rounded\",\n    type: \"button\",\n    onClick: e => PagarFactura(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Pagar\"))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, loadinPago)))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/spm/Desktop/UcomNextJsTest/pages/index.js"],"names":["Container","React","useState","getUrlEstadoCuenta","getUrlPago","Estadocuenta","LoadingIndigo","LoadingWhite","Index","inpCed","inpCedValue","loadinConsulta","setloadinConsulta","loadinPago","setloadinPago","inpIdFact","setinpIdFact","inpPago","setinpPago","estadoCta","setEstadoCta","getEstadoCuenta","e","preventDefault","length","proc","method","body","JSON","stringify","cliente","headers","fetch","then","result","json","data","catch","error","console","log","PagarFactura","secuencial","val_pagado","status","idtrx","msg","target","value"],"mappings":"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","sourcesContent":["import Container from \"../components/Container\";\nimport React, { useState } from 'react';\nimport {getUrlEstadoCuenta, getUrlPago} from \"../libraries/env\"\nimport Estadocuenta from \"../components/Estadocuenta\"\nimport {LoadingIndigo, LoadingWhite} from \"../components/Loadings\"\n\n\nconst Index = () => {\n     const [inpCed, inpCedValue] = useState('');\n     const [loadinConsulta, setloadinConsulta] = useState('');\n     const [loadinPago, setloadinPago] = useState('');\n     const [inpIdFact, setinpIdFact] = useState('');\n     const [inpPago, setinpPago] = useState('');\n     const [estadoCta, setEstadoCta] = useState(null);\n\n     async function getEstadoCuenta(e){\n        e.preventDefault();\n        if(inpCed.length > 0)\n        {\n            setEstadoCta(null);\n            let proc = {\n              method: 'POST',\n              body: JSON.stringify({\n                cliente : inpCed\n              }), \n              headers:{\n                'Content-Type': 'application/json',\n              }\n            };\n            \n            fetch(getUrlEstadoCuenta(), proc)\n            .then(setloadinConsulta(<LoadingIndigo></LoadingIndigo>))\n            .then(result => { \n              return result.json()\n            })\n            .then(data => {\n                setloadinConsulta('')\n                setEstadoCta(data);\n            })\n            .catch(error => {\n              console.log(error);\n              setloadinConsulta('errores...');\n             })\n        }\n      }\n\n\n\n      async function PagarFactura(e){\n        e.preventDefault();\n        if(inpPago.length > 0 && inpIdFact.length > 0) \n        {\n            setloadinPago('')\n            let proc = {\n              method: 'POST',\n              body: JSON.stringify({\n                secuencial : inpIdFact,\n                val_pagado : inpPago\n              }), \n              headers:{\n                'Content-Type': 'application/json',\n              }\n            };\n            \n            fetch(getUrlPago(), proc)\n            .then(setloadinPago(<LoadingWhite></LoadingWhite>))\n            .then(result => { \n              return result.json()\n            })\n            .then(data => {\n\n                if(data.status == 0)\n                {\n                    setloadinPago(\n                        <div className=\"text-white\">\n                            <p>Pago realizado con exito</p>\n                            <p>{data.data.idtrx}</p>\n                        </div>\n                    )\n                }\n                else{\n                    setloadinPago(\n                        <div className=\"text-white\">\n                            <p>Error en el proceso de pago</p>\n                            <p>{data.msg}</p>\n                        </div>\n                    )\n                }\n            })\n            .catch(error => {\n              console.log(error);\n              setloadinPago('errores...');\n             })\n        }\n      }\n\n\n return(\n\n  <Container>\n    <div>\n      <div className=\"flex flex-wrap\">\n        <div className=\"flex-1 text-center h-screen\">\n          <h1 className=\"pt-10 text-3xl font-semibold\">Estado de cuenta</h1>\n          <div className=\"container flex flex-wrap my-10 px-6 justify-center\">\n            <div className=\"w-full md:w-1/2 mb-6 md:mb-0 text-left pr-6\">\n              <label\n                className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-1 ml-1\" htmlFor=\"imp_ced\">\n                cedula\n              </label>\n              <input\n                id=\"imp_ced\"\n                className=\"block w-full text-gray-700 border rounded py-3 px-4 leading-tight focus:outline-none\"\n                type=\"text\"\n                placeholder=\"0926327917\"\n                value={inpCed} onChange={(e) => inpCedValue(e.target.value)}\n                />\n            </div>\n\n            <div className=\"flex content-end flex-wrap \">\n            <button\n              className=\"bg-indigo-600 hover:bg-indigo-700 border-indigo-600 hover:border-indigo-700 text-sm border-4 text-white py-2 px-2 rounded\"\n              type=\"button\"\n              onClick={e => getEstadoCuenta(e)}\n            >\n              Consultar\n            </button>\n            </div>\n          </div>\n\n          <p>{loadinConsulta}</p>\n         {estadoCta && <Estadocuenta props={estadoCta}></Estadocuenta>}\n\n\n        </div>\n\n\n\n        <div className=\"flex-1 bg-indigo-600 text-center bg-gray-400 h-screen\">\n          <h1 className=\"pt-10 text-3xl font-semibold text-white\">Realizar Pagos</h1>\n          <div className=\" flex flex-wrap my-10 px-6 justify-center\">\n              <div className=\"flex-1 text-left px-2\">\n                <label\n                    className=\"block uppercase tracking-wide text-gray-100 text-xs font-bold mb-1 ml-1\" htmlFor=\"imp_idfact\">\n                    Id Factura\n                </label>\n                <input\n                id=\"imp_idfact\"\n                className=\"block w-full text-gray-700 border rounded py-3 px-4 leading-tight focus:outline-none\"\n                type=\"number\"\n                value={inpIdFact} onChange={(e) => setinpIdFact(e.target.value)}\n                />\n              </div>\n              <div className=\"flex-1 text-left px-2\">\n                <label\n                    className=\"block uppercase tracking-wide text-gray-100 text-xs font-bold mb-1 ml-1\" htmlFor=\"imp_idfact\">\n                    Valor a pagar\n                </label>\n                <input\n                id=\"imp_val\"\n                className=\"block w-full text-gray-700 border rounded py-3 px-4 leading-tight focus:outline-none\"\n                type=\"text\"\n                value={inpPago} onChange={(e) => setinpPago(e.target.value)}\n                />\n              </div>\n              <div className=\"flex content-end flex-wrap  text-left px-2\">\n                <button\n                className=\"bg-indigo-300 hover:bg-indigo-800 border-indigo-300 hover:border-indigo-800 hover:text-white text-sm border-4 text-indigo-900 font-medium  py-2 px-6 rounded\" type=\"button\"\n                onClick={e => PagarFactura(e)}\n                >\n                Pagar\n                </button>\n              </div>\n          </div>\n          <p>{loadinPago}</p>\n        </div>\n      </div>\n    </div>\n  </Container>\n\n    );\n\n\n\n\n }\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}